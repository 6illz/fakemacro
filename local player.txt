local player = game.Players.LocalPlayer
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player.PlayerGui

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 100, 0, 100) -- Size of the button (100x100 pixels)
button.Position = UDim2.new(1, -120, 0, 10) -- Positioned slightly left from the top-right corner
button.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Grey color
button.Text = "sinx.cc macro" -- Text on the button
button.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text color
button.TextScaled = true -- Scale text to fit the button
button.Parent = screenGui

-- Speed settings
local normalSpeed = 16
local boostedSpeed = 160
local speedBoostEnabled = false

-- Function to toggle speed
local function toggleSpeed()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    
    if speedBoostEnabled then
        humanoid.WalkSpeed = normalSpeed
        button.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Grey color
    else
        humanoid.WalkSpeed = boostedSpeed
        button.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Example: Green color for active state
    end
    speedBoostEnabled = not speedBoostEnabled
end

-- Connect the button click event
button.MouseButton1Click:Connect(toggleSpeed)

-- Ensure the button is only visible on mobile devices
local userInputService = game:GetService("UserInputService")
local function updateButtonVisibility()
    button.Visible = userInputService.TouchEnabled
end

updateButtonVisibility()
userInputService.DeviceChanged:Connect(updateButtonVisibility)

-- Draggable functionality
local dragging = true
local dragStart = Vector2.new()
local startPos = UDim2.new()

local function onInputBegan(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        local touch = input
        if (touch.Position - button.AbsolutePosition).Magnitude < button.AbsoluteSize.Magnitude then
            dragging = true
            dragStart = touch.Position
            startPos = button.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = true
                end
            end)
        end
    end
end

local function onInputChanged(input)
    if dragging and input.UserInputType == Enum.UserInputType.Touch then
        local delta = input.Position - dragStart
        button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end

local function onInputEnded(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end

userInputService.InputBegan:Connect(onInputBegan)
userInputService.InputChanged:Connect(onInputChanged)
userInputService.InputEnded:Connect(onInputEnded)
